package Core;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PieLabelLinkStyle;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RectangleInsets;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shahlin
 */
public class Wallet extends javax.swing.JFrame {

    /**
     * Creates new form Wallet
     */
    public Wallet() {
        initComponents();
        this.setResizable(false);
        setLocationRelativeTo(this);
        
        //Defaults
        negativeBalanceLabel.setVisible(false);
        homeUnderline.setVisible(false);
        settingsUnderline.setVisible(false);
        
        displayAllRecords();
        setAmounts();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeBtn = new javax.swing.JButton();
        settingsBtn = new javax.swing.JButton();
        addRecordLabel = new javax.swing.JLabel();
        displayChartBtn = new javax.swing.JButton();
        dropDown = new javax.swing.JComboBox<>();
        incomesPlusLabel = new javax.swing.JLabel();
        expensesMinusLabel = new javax.swing.JLabel();
        incomesAmount = new javax.swing.JLabel();
        expensesAmount = new javax.swing.JLabel();
        balanceAmount = new javax.swing.JLabel();
        negativeBalanceLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordsContainer = new javax.swing.JTextPane();
        dropDown1 = new javax.swing.JComboBox<>();
        homeUnderline = new javax.swing.JLabel();
        settingsUnderline = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1040, 700));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        homeBtn.setBorder(null);
        homeBtn.setBorderPainted(false);
        homeBtn.setContentAreaFilled(false);
        homeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeBtnMouseExited(evt);
            }
        });
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(homeBtn);
        homeBtn.setBounds(388, 32, 110, 43);

        settingsBtn.setBorder(null);
        settingsBtn.setBorderPainted(false);
        settingsBtn.setContentAreaFilled(false);
        settingsBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingsBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingsBtnMouseExited(evt);
            }
        });
        settingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsBtnActionPerformed(evt);
            }
        });
        getContentPane().add(settingsBtn);
        settingsBtn.setBounds(585, 35, 140, 40);

        addRecordLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addRecordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addRecordLabelMouseClicked(evt);
            }
        });
        getContentPane().add(addRecordLabel);
        addRecordLabel.setBounds(30, 190, 210, 50);

        displayChartBtn.setBorder(null);
        displayChartBtn.setBorderPainted(false);
        displayChartBtn.setContentAreaFilled(false);
        displayChartBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        displayChartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayChartBtnActionPerformed(evt);
            }
        });
        getContentPane().add(displayChartBtn);
        displayChartBtn.setBounds(27, 480, 214, 50);

        dropDown.setBackground(new java.awt.Color(0, 153, 51, 0));
        usersHelper user = new usersHelper();
        dropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {user.getUsername(user.getLoggedInUser()), "Logout"}));
        dropDown.setOpaque(false);
        dropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownActionPerformed(evt);
            }
        });
        getContentPane().add(dropDown);
        dropDown.setBounds(798, 35, 186, 38);

        incomesPlusLabel.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        incomesPlusLabel.setForeground(new java.awt.Color(110, 161, 139));
        incomesPlusLabel.setText("( + )");
        getContentPane().add(incomesPlusLabel);
        incomesPlusLabel.setBounds(780, 584, 50, 40);

        expensesMinusLabel.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        expensesMinusLabel.setForeground(new java.awt.Color(207, 85, 82));
        expensesMinusLabel.setText("( - )");
        getContentPane().add(expensesMinusLabel);
        expensesMinusLabel.setBounds(370, 584, 40, 40);

        incomesAmount.setFont(new java.awt.Font("Lato", 0, 20)); // NOI18N
        incomesAmount.setForeground(new java.awt.Color(74, 72, 65));
        incomesAmount.setText("1000.00");
        incomesAmount.setVerticalAlignment(JLabel.CENTER);
        incomesAmount.setHorizontalAlignment(JLabel.RIGHT);
        getContentPane().add(incomesAmount);
        incomesAmount.setBounds(830, 590, 120, 30);

        expensesAmount.setFont(new java.awt.Font("Lato", 0, 20)); // NOI18N
        expensesAmount.setForeground(new java.awt.Color(74, 72, 65));
        expensesAmount.setText("1922.32");
        expensesAmount.setVerticalAlignment(JLabel.CENTER);
        expensesAmount.setHorizontalAlignment(JLabel.RIGHT);
        getContentPane().add(expensesAmount);
        expensesAmount.setBounds(410, 589, 130, 30);

        balanceAmount.setFont(new java.awt.Font("Lato", 0, 30)); // NOI18N
        balanceAmount.setForeground(new java.awt.Color(74, 72, 65));
        balanceAmount.setVerticalAlignment(JLabel.CENTER);
        balanceAmount.setHorizontalAlignment(JLabel.CENTER);
        getContentPane().add(balanceAmount);
        balanceAmount.setBounds(48, 307, 170, 70);

        negativeBalanceLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/WalletRedRoundedRect.png"))); // NOI18N
        getContentPane().add(negativeBalanceLabel);
        negativeBalanceLabel.setBounds(37, 290, 195, 130);

        jScrollPane1.setBorder(null);

        recordsContainer.setEditable(false);
        recordsContainer.setBackground(new java.awt.Color(251, 255, 233));
        recordsContainer.setBorder(null);
        recordsContainer.setOpaque(false);
        jScrollPane1.setViewportView(recordsContainer);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(335, 173, 647, 372);

        dropDown1.setBackground(new java.awt.Color(0, 153, 51, 0));
        dropDown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {user.getUsername(user.getLoggedInUser()), "Logout"}));
        dropDown1.setBorder(null);
        dropDown1.setOpaque(false);
        dropDown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDown1ActionPerformed(evt);
            }
        });
        getContentPane().add(dropDown1);
        dropDown1.setBounds(798, 35, 186, 38);

        homeUnderline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/Underlines/homeUnderline.png"))); // NOI18N
        getContentPane().add(homeUnderline);
        homeUnderline.setBounds(442, 73, 80, 10);

        settingsUnderline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/Underlines/settingsUnderline.png"))); // NOI18N
        getContentPane().add(settingsUnderline);
        settingsUnderline.setBounds(640, 73, 80, 10);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Wallet.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1040, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void addRecordLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addRecordLabelMouseClicked
        // TODO add your handling code here:
        addRecord next = new addRecord();
        this.setVisible(false);
        next.setVisible(true);
    }//GEN-LAST:event_addRecordLabelMouseClicked

    private void displayChartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayChartBtnActionPerformed
        // TODO add your handling code here:
        
        walletHelper helper = new walletHelper();
        usersHelper user = new usersHelper();
        
        int user_id = user.getLoggedInUser();
        double amount = 0;
        String category = "";
        
        //Create dataset to display in a chart
        DefaultPieDataset dataset = new DefaultPieDataset();
        JFreeChart chart = ChartFactory.createPieChart("Expenses and Incomes", dataset, true, true, false);
        
        //Design title
        chart.getTitle().setPaint(new Color(74, 72, 65));
        chart.getTitle().setFont(new Font("Lato", Font.PLAIN, 25));
        chart.setBackgroundPaint(new Color(243, 240, 231));
        chart.setPadding(new RectangleInsets(20,20,20,20));
        
        
        PiePlot plot = (PiePlot) chart.getPlot();
        
        ResultSet rs = helper.getCategoryItems(user_id);
        
        //Different colors for expenses
        Color[] expenseColors = {new Color(236,100,75), 
                                 new Color(210, 77, 87), 
                                 new Color(239, 72, 54), 
                                 new Color(150, 40, 27), 
                                 new Color(214, 69, 65), 
                                 new Color(192, 57, 43), 
                                 new Color(231, 76, 60), 
                                 new Color(246, 71, 71), 
                                 new Color(226, 106, 106),
                                 new Color(255, 178, 178)};

        //Different colors for incomes
        Color[] incomeColors = {new Color(54, 159, 85), 
                                new Color(72, 175, 102), 
                                new Color(76, 189, 109), 
                                new Color(92,199, 124), 
                                new Color(97, 204, 127), 
                                new Color(108, 214, 138), 
                                new Color(119, 225, 149), 
                                new Color(129, 231, 158), 
                                new Color(139, 239, 167), 
                                new Color(154, 247, 180)};
        try {
            int expenseCounter = 0;
            int incomeCounter = 0;
            while(rs.next()){
                
                category = rs.getString("category");
                
                if(rs.getDouble("expense") != 0){
                    amount = rs.getDouble("expense");
                    plot.setSectionPaint(category, expenseColors[expenseCounter]);
                    
                    expenseCounter++;
                } else {
                    amount = rs.getDouble("income");
                    plot.setSectionPaint(category, incomeColors[incomeCounter]);
                    
                    incomeCounter++;
                }
                
                dataset.setValue(category, amount);
            }
            
            //Close ResultSet to avoid leakage
            rs.close();
        } catch (SQLException ex) {
            System.out.println(ex);
        }

        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setSize(800, 600);
        
        //Removes the label borders
        plot.setOutlineVisible(false);
        
        //Sets label background color
        plot.setBackgroundPaint(new Color(243, 240, 231));
        
        //Sets label paint
        plot.setLabelBackgroundPaint(new Color(230, 225, 210));
        
        //Sets the connecting line stroke thickness
        plot.setLabelLinkStroke(new BasicStroke(0.5f));
        
        //Sets the label's outline thickness
        plot.setLabelOutlineStroke(new BasicStroke(0));
        
        //Sets the connecting line style
        plot.setLabelLinkStyle(PieLabelLinkStyle.STANDARD);
        
        //Sets padding on the labels
        plot.setLabelPadding(new RectangleInsets(10,10,10,10));
        
        plot.setInteriorGap(0.15);
        
        //Remove shadow
        plot.setShadowPaint(new Color(243, 240, 231));
        
        //Remove Pie outline
        plot.setBaseSectionOutlinePaint(new Color(226, 106, 106));
        plot.setBaseSectionOutlineStroke(new BasicStroke(0));
        
        //Remove frame border
        plot.setOutlineVisible(false);
        
        
        
        frame.setVisible(true);
    }//GEN-LAST:event_displayChartBtnActionPerformed

    private void dropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownActionPerformed
        // TODO add your handling code here:

        if(dropDown.getSelectedItem().equals("Logout")){
            usersHelper user = new usersHelper();
            user.logout();
            this.setVisible(false);
            dispose();

            Login window = new Login();
            window.setVisible(true);
        }
    }//GEN-LAST:event_dropDownActionPerformed
    
    private void displayAllRecords(){
        usersHelper user = new usersHelper();
        walletHelper helper = new walletHelper();
        
        ResultSet recordsSet = helper.displayRecords(user.getLoggedInUser());
        
        //Start HTML tag for formatting the content in HTML
        String recordDetails = "<html>";
        
        boolean divColorFlag = true;
        
        try {
            while(recordsSet.next()){
                //Get values from table
                String note = recordsSet.getString("note");
                String category = recordsSet.getString("category");
                double expense = recordsSet.getDouble("expense");
                double income = recordsSet.getDouble("income");
                String date_posted = recordsSet.getString("date_added");
                
                String date = date_posted.substring(0, 10);
                String time = date_posted.substring(11, date_posted.length() - 2);
                
                recordDetails += (divColorFlag) ? "<div style=\"background-color:#ece8da;\">" : "<div style=\"background-color:#e6e1d2;\">";

                recordDetails += "<h2 style=\"color:#4a4841;\">Category : " + category + "</h2>";
                recordDetails += (!note.equals("")) ? "<span style='color:#4a4841;'><i>" + note + "</i></span>" : "";
                recordDetails += (!note.equals("")) ? "<br>" : "";
                
                if(income == 0){
                    //Its an expense
                    recordDetails += "<h2><b style='color:#da8985;'>Expense of </b><b style='color:#4a4841;'>" + expense + " AED</b></h2>";;
                } else if(expense == 0){
                    //Its an income
                    recordDetails += "<h2><b style='color:#6ea18b;'>Income of </b><b style='color:#4a4841;'>" + income + " AED</b></h2>";
                }
                
                recordDetails += "<span style='color:#87847c;'><i>Posted on " + date + " at " + time + "</i></span>";
                recordDetails += "<br>";
                recordDetails += "<br>";
                
                recordDetails += "</div>";

                divColorFlag = !divColorFlag;
            }

            recordsSet.close();
        } catch(SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
        }
        
        recordDetails += "</html>";
        recordsContainer.setContentType("text/html");
        recordsContainer.setText(recordDetails);
    }
    
    private void setAmounts(){
        walletHelper helper = new walletHelper();
        usersHelper user = new usersHelper();
        
        double expenses = helper.getTotalExpense(user.getLoggedInUser());
        double income = helper.getTotalIncome(user.getLoggedInUser());
        double balance = income - expenses;
        
        expensesAmount.setText("" + expenses);
        incomesAmount.setText("" + income);
        
        if(balance < 0){
            //Negative balance
            negativeBalanceLabel.setVisible(true);
            balanceAmount.setText("" + balance);
        } else {
            balanceAmount.setText("" + balance);
        }
    }
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        jScrollPane1.getVerticalScrollBar().setValue(0);
    }//GEN-LAST:event_formComponentShown

    private void dropDown1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDown1ActionPerformed
        // TODO add your handling code here:

        if (dropDown.getSelectedItem().equals("Logout")) {
            usersHelper user = new usersHelper();
            user.logout();
            this.setVisible(false);
            dispose();

            Login window = new Login();
            window.setVisible(true);
        }
    }//GEN-LAST:event_dropDown1ActionPerformed

    private void homeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseEntered
        // TODO add your handling code here:
        homeUnderline.setVisible(true);
    }//GEN-LAST:event_homeBtnMouseEntered

    private void homeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseExited
        // TODO add your handling code here:
        homeUnderline.setVisible(false);
    }//GEN-LAST:event_homeBtnMouseExited

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        Home window = new Home();
        window.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_homeBtnActionPerformed

    private void settingsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseClicked
        // TODO add your handling code here:
        Settings window = new Settings();
        window.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_settingsBtnMouseClicked

    private void settingsBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseEntered
        // TODO add your handling code here:
        settingsUnderline.setVisible(true);
    }//GEN-LAST:event_settingsBtnMouseEntered

    private void settingsBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseExited
        // TODO add your handling code here:
        settingsUnderline.setVisible(false);
    }//GEN-LAST:event_settingsBtnMouseExited

    private void settingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsBtnActionPerformed
        // TODO add your handling code here:
        Settings window = new Settings();
        window.setVisible(true);
    }//GEN-LAST:event_settingsBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Wallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Wallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Wallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Wallet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Wallet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addRecordLabel;
    private javax.swing.JLabel background;
    private javax.swing.JLabel balanceAmount;
    private javax.swing.JButton displayChartBtn;
    private javax.swing.JComboBox<String> dropDown;
    private javax.swing.JComboBox<String> dropDown1;
    private javax.swing.JLabel expensesAmount;
    private javax.swing.JLabel expensesMinusLabel;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel homeUnderline;
    private javax.swing.JLabel incomesAmount;
    private javax.swing.JLabel incomesPlusLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel negativeBalanceLabel;
    private javax.swing.JTextPane recordsContainer;
    private javax.swing.JButton settingsBtn;
    private javax.swing.JLabel settingsUnderline;
    // End of variables declaration//GEN-END:variables


}
