package Core;

import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JTextPane;

/**
 *
 * @author sidra
 */
//I know you can x) But see
public class Reminders extends javax.swing.JFrame {

    public Reminders() {
        remindersHelper helper= new remindersHelper();
        usersHelper user = new usersHelper();
        
        initComponents();
        this.setResizable(false);
        setLocationRelativeTo(this);
        

        add_btn.setVisible(false);
        add_btn_disabled.setVisible(true);
        
        addBtn.setEnabled(false);
        
        completeScrollPane.setVisible(false);
        completedRemindersContainer.setVisible(false);
        taskNotDoneLogo.setVisible(false);
        showIncompleteText.setVisible(false);
        showIncomplete.setVisible(false);
        
        homeUnderline.setVisible(false);
        settingsUnderline.setVisible(false);
        
        //Check for completed reminders
        helper.updateComplete();
        
        helper.updateAllRepeats(user.getLoggedInUser());
        //Display Reminders
        displayReminders(0, remindersContainer);
        displayReminders(1, completedRemindersContainer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleInput = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        add_btn_disabled = new javax.swing.JLabel();
        add_btn = new javax.swing.JLabel();
        dropDown = new javax.swing.JComboBox<>();
        completeScrollPane = new javax.swing.JScrollPane();
        completedRemindersContainer = new javax.swing.JTextPane();
        incompleteScrollPane = new javax.swing.JScrollPane();
        remindersContainer = new javax.swing.JTextPane();
        quote = new javax.swing.JLabel();
        showCalendar = new javax.swing.JButton();
        showCalendarText = new javax.swing.JLabel();
        showCompleted = new javax.swing.JButton();
        taskNotDoneLogo = new javax.swing.JLabel();
        showIncomplete = new javax.swing.JButton();
        showCompleteText = new javax.swing.JLabel();
        showIncompleteText = new javax.swing.JLabel();
        homeBtn = new javax.swing.JButton();
        settingsBtn = new javax.swing.JButton();
        settingsUnderline = new javax.swing.JLabel();
        homeUnderline = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1040, 700));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(null);

        titleInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        titleInput.setForeground(new java.awt.Color(102, 102, 102));
        titleInput.setText("Add a reminder...");
        titleInput.setBorder(null);
        titleInput.setOpaque(false);
        titleInput.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                titleInputCaretUpdate(evt);
            }
        });
        titleInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                titleInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                titleInputFocusLost(evt);
            }
        });
        titleInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleInputActionPerformed(evt);
            }
        });
        titleInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                titleInputKeyReleased(evt);
            }
        });
        getContentPane().add(titleInput);
        titleInput.setBounds(325, 178, 550, 42);

        addBtn.setBorder(null);
        addBtn.setBorderPainted(false);
        addBtn.setContentAreaFilled(false);
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn);
        addBtn.setBounds(920, 175, 50, 48);

        add_btn_disabled.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/addReminderDisabled.png"))); // NOI18N
        getContentPane().add(add_btn_disabled);
        add_btn_disabled.setBounds(920, 174, 50, 50);

        add_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/addReminder.png"))); // NOI18N
        getContentPane().add(add_btn);
        add_btn.setBounds(920, 174, 50, 50);

        dropDown.setBackground(new java.awt.Color(0, 153, 51, 0));
        usersHelper user = new usersHelper();
        dropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {user.getUsername(user.getLoggedInUser()), "Logout"}));
        dropDown.setBorder(null);
        dropDown.setOpaque(false);
        dropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownActionPerformed(evt);
            }
        });
        getContentPane().add(dropDown);
        dropDown.setBounds(798, 35, 186, 38);

        completeScrollPane.setBackground(new java.awt.Color(204, 51, 0));
        completeScrollPane.setBorder(null);
        completeScrollPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                completeScrollPaneFocusGained(evt);
            }
        });

        completedRemindersContainer.setEditable(false);
        completedRemindersContainer.setBackground(new java.awt.Color(251, 255, 233));
        completedRemindersContainer.setBorder(null);
        completedRemindersContainer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                completedRemindersContainerFocusGained(evt);
            }
        });
        completeScrollPane.setViewportView(completedRemindersContainer);
        incompleteScrollPane.setViewportBorder(null);

        getContentPane().add(completeScrollPane);
        completeScrollPane.setBounds(315, 256, 560, 339);

        incompleteScrollPane.setBackground(new java.awt.Color(204, 51, 0));
        incompleteScrollPane.setBorder(null);
        incompleteScrollPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                incompleteScrollPaneFocusGained(evt);
            }
        });

        remindersContainer.setEditable(false);
        remindersContainer.setBackground(new java.awt.Color(251, 255, 233));
        remindersContainer.setBorder(null);
        remindersContainer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                remindersContainerFocusGained(evt);
            }
        });
        incompleteScrollPane.setViewportView(remindersContainer);
        incompleteScrollPane.setViewportBorder(null);

        getContentPane().add(incompleteScrollPane);
        incompleteScrollPane.setBounds(315, 256, 560, 339);

        quote.setFont(new java.awt.Font("Arial", 2, 16)); // NOI18N
        getContentPane().add(quote);
        quote.setBounds(40, 270, 180, 220);

        showCalendar.setBorder(null);
        showCalendar.setBorderPainted(false);
        showCalendar.setContentAreaFilled(false);
        showCalendar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCalendarActionPerformed(evt);
            }
        });
        getContentPane().add(showCalendar);
        showCalendar.setBounds(20, 500, 230, 40);

        showCalendarText.setFont(new java.awt.Font("Lato", 0, 20)); // NOI18N
        showCalendarText.setForeground(new java.awt.Color(74, 72, 65));
        showCalendarText.setText("Show Calendar");
        getContentPane().add(showCalendarText);
        showCalendarText.setBounds(80, 500, 160, 30);

        showCompleted.setBorder(null);
        showCompleted.setBorderPainted(false);
        showCompleted.setContentAreaFilled(false);
        showCompleted.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCompletedActionPerformed(evt);
            }
        });
        getContentPane().add(showCompleted);
        showCompleted.setBounds(18, 208, 230, 40);

        taskNotDoneLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/task-notdone-flat.png"))); // NOI18N
        getContentPane().add(taskNotDoneLogo);
        taskNotDoneLogo.setBounds(18, 203, 41, 50);

        showIncomplete.setBorder(null);
        showIncomplete.setBorderPainted(false);
        showIncomplete.setContentAreaFilled(false);
        showIncomplete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showIncomplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIncompleteActionPerformed(evt);
            }
        });
        getContentPane().add(showIncomplete);
        showIncomplete.setBounds(18, 209, 230, 40);

        showCompleteText.setFont(new java.awt.Font("Lato", 0, 20)); // NOI18N
        showCompleteText.setForeground(new java.awt.Color(74, 72, 65));
        showCompleteText.setText("Show Completed");
        getContentPane().add(showCompleteText);
        showCompleteText.setBounds(75, 212, 160, 30);

        showIncompleteText.setFont(new java.awt.Font("Lato", 0, 20)); // NOI18N
        showIncompleteText.setForeground(new java.awt.Color(74, 72, 65));
        showIncompleteText.setText("Show Incomplete");
        getContentPane().add(showIncompleteText);
        showIncompleteText.setBounds(75, 212, 160, 30);

        homeBtn.setBorder(null);
        homeBtn.setBorderPainted(false);
        homeBtn.setContentAreaFilled(false);
        homeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeBtnMouseExited(evt);
            }
        });
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(homeBtn);
        homeBtn.setBounds(388, 32, 110, 43);

        settingsBtn.setBorder(null);
        settingsBtn.setBorderPainted(false);
        settingsBtn.setContentAreaFilled(false);
        settingsBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingsBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingsBtnMouseExited(evt);
            }
        });
        settingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsBtnActionPerformed(evt);
            }
        });
        getContentPane().add(settingsBtn);
        settingsBtn.setBounds(585, 35, 140, 40);

        settingsUnderline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/Underlines/settingsUnderline.png"))); // NOI18N
        getContentPane().add(settingsUnderline);
        settingsUnderline.setBounds(640, 73, 80, 10);

        homeUnderline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/Underlines/homeUnderline.png"))); // NOI18N
        getContentPane().add(homeUnderline);
        homeUnderline.setBounds(442, 73, 80, 10);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Reminders.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1040, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        addReminder next = new addReminder();
        addReminder.title.setText(titleInput.getText());
        this.setVisible(false);
        next.setVisible(true);
    }//GEN-LAST:event_addBtnActionPerformed

    private void titleInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleInputActionPerformed

    }//GEN-LAST:event_titleInputActionPerformed

    private void titleInputCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_titleInputCaretUpdate
        // TODO add your handling code here:
        Validation validate = new Validation();
        
        if(validate.stringIsEmpty(titleInput.getText()) || validate.validateTextLength(titleInput.getText(), 40, "Title") == false || titleInput.getText().equals("Add a reminder...")){
            //Title is empty
            addBtn.setEnabled(false);
            add_btn.setVisible(false);
            add_btn_disabled.setVisible(true);
        } else {
            addBtn.setEnabled(true);
            add_btn.setVisible(true);
            add_btn_disabled.setVisible(false);
        }
    }//GEN-LAST:event_titleInputCaretUpdate

    private void titleInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleInputKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_titleInputKeyReleased

    private void titleInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleInputFocusGained
        // TODO add your handling code here:
        String title = titleInput.getText();
        
        if(title.equals("Add a reminder...")){
            titleInput.setText("");
        }
    }//GEN-LAST:event_titleInputFocusGained

    private void titleInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleInputFocusLost
        // TODO add your handling code here:
        String title = titleInput.getText();
        
        if(title.equals("")){
            //Default username
            titleInput.setText("Add a reminder...");
        }
    }//GEN-LAST:event_titleInputFocusLost

    private void displayReminders(int complete, JTextPane tp){
        usersHelper user = new usersHelper();
        remindersHelper helper = new remindersHelper();
        
        ResultSet remindersSet = helper.displayReminders(user.getLoggedInUser() , complete);
        
        //Start HTML tag for formatting the content in HTML
        String reminderDetails = "<html>";
        
        boolean divColorFlag = true;
        
        try {
            while(remindersSet.next()){
                //Get values from table
                String title = remindersSet.getString("reminder_title");
                String datetime = remindersSet.getString("reminder_datetime");
                String date_posted = remindersSet.getString("time_posted");
                boolean priority = remindersSet.getBoolean("priority");
                
                datetime = datetime.substring(0, datetime.length() - 2);
                
                String date = date_posted.substring(0, 10);
                String time = date_posted.substring(11, date_posted.length() - 2);
                
                reminderDetails += (divColorFlag) ? "<div style=\"background-color:#ece8da;\">" : "<div style=\"background-color:#e6e1d2;\">";
                
                reminderDetails += (!priority) ? "<h2 style=\"color:#4a4841;\">" + title + "</h2>" : "<h2 style=\"color:#CF000F;\">" + title + " <span style='font-size:15px;'>!</span> </h2>";
                reminderDetails += "<br>";
                //If body doesn't exist, do not add a line break
                reminderDetails += (!datetime.equals("")) ? "<span style='color:#4a4841;'>Remind me at : " + datetime + "</span>" : "";
                reminderDetails += (!datetime.equals("")) ? "<br><br>" : "";
                reminderDetails += "<span style='color:#87847c;'><i>Posted on " + date + " at " + time + "</i></span>";
                reminderDetails += "<br>";
                reminderDetails += "<br>";
                reminderDetails += "</div>";

                divColorFlag = !divColorFlag;
            }

            //remindersSet.close();
        } catch(SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
        }
        
        reminderDetails += "</html>";
        tp.setContentType("text/html");
        tp.setText(reminderDetails);
        
        //Instantiate Util class to get quotes
        Util util = new Util();
        
        quote.setText("<html>" + util.printQuote("http://feeds.feedburner.com/brainyquote/QUOTEBR") + "</html>");
    }
    
    private void dropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownActionPerformed
        // TODO add your handling code here:

        if(dropDown.getSelectedItem().equals("Logout")){
            usersHelper user = new usersHelper();
            user.logout();
            this.setVisible(false);
            dispose();

            Login window = new Login();
            window.setVisible(true);
        }
    }//GEN-LAST:event_dropDownActionPerformed

    private void incompleteScrollPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incompleteScrollPaneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_incompleteScrollPaneFocusGained

    private void remindersContainerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_remindersContainerFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_remindersContainerFocusGained

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        incompleteScrollPane.getVerticalScrollBar().setValue(0);
    }//GEN-LAST:event_formComponentShown

    private void showCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCompletedActionPerformed
        // TODO add your handling code here:
        incompleteScrollPane.setVisible(false);
        completeScrollPane.setVisible(true);
        completedRemindersContainer.setVisible(true);
        
        taskNotDoneLogo.setVisible(true);
        showIncompleteText.setVisible(true);
        showIncomplete.setVisible(true);
        
        showCompleted.setVisible(false);
        showCompleteText.setVisible(false);
    }//GEN-LAST:event_showCompletedActionPerformed

    private void completedRemindersContainerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_completedRemindersContainerFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_completedRemindersContainerFocusGained

    private void completeScrollPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_completeScrollPaneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_completeScrollPaneFocusGained

    private void showIncompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showIncompleteActionPerformed
        // TODO add your handling code here:
        incompleteScrollPane.setVisible(true);
        completeScrollPane.setVisible(false);
        
        taskNotDoneLogo.setVisible(false);
        showIncompleteText.setVisible(false);
        showIncomplete.setVisible(false);
        
        showCompleted.setVisible(true);
        showCompleteText.setVisible(true);
    }//GEN-LAST:event_showIncompleteActionPerformed

    private void homeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseEntered
        // TODO add your handling code here:
        homeUnderline.setVisible(true);
    }//GEN-LAST:event_homeBtnMouseEntered

    private void homeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseExited
        // TODO add your handling code here:
        homeUnderline.setVisible(false);
    }//GEN-LAST:event_homeBtnMouseExited

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        Home window = new Home();
        window.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_homeBtnActionPerformed

    private void settingsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseClicked
        // TODO add your handling code here:
        Settings window = new Settings();
        window.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_settingsBtnMouseClicked

    private void settingsBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseEntered
        // TODO add your handling code here:
        settingsUnderline.setVisible(true);
    }//GEN-LAST:event_settingsBtnMouseEntered

    private void settingsBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseExited
        // TODO add your handling code here:
        settingsUnderline.setVisible(false);
    }//GEN-LAST:event_settingsBtnMouseExited

    private void settingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsBtnActionPerformed
        // TODO add your handling code here:
        Settings window = new Settings();
        window.setVisible(true);
    }//GEN-LAST:event_settingsBtnActionPerformed

    private void showCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCalendarActionPerformed
        // TODO add your handling code here:
        CalendarHandle openCalendar = new CalendarHandle();
        openCalendar.setVisible(true);
    }//GEN-LAST:event_showCalendarActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reminders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel add_btn;
    private javax.swing.JLabel add_btn_disabled;
    private javax.swing.JLabel background;
    private javax.swing.JScrollPane completeScrollPane;
    private javax.swing.JTextPane completedRemindersContainer;
    private javax.swing.JComboBox<String> dropDown;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel homeUnderline;
    private javax.swing.JScrollPane incompleteScrollPane;
    private javax.swing.JLabel quote;
    private javax.swing.JTextPane remindersContainer;
    private javax.swing.JButton settingsBtn;
    private javax.swing.JLabel settingsUnderline;
    private javax.swing.JButton showCalendar;
    private javax.swing.JLabel showCalendarText;
    private javax.swing.JLabel showCompleteText;
    private javax.swing.JButton showCompleted;
    private javax.swing.JButton showIncomplete;
    private javax.swing.JLabel showIncompleteText;
    private javax.swing.JLabel taskNotDoneLogo;
    public static javax.swing.JTextField titleInput;
    // End of variables declaration//GEN-END:variables
}
