package Core;

import Bluetooth.ApplicationContext;
import Bluetooth.BluetoothBrowser;
import Bluetooth.ListItem;
import Bluetooth.SendFileTask;
import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import javax.bluetooth.RemoteDevice;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shahlin
 */
public class TransferFile extends javax.swing.JFrame{
    BluetoothBrowser browser;
    Thread thread;
    /**
     * Creates new form TransferFile
     */
    public TransferFile() {
        initComponents();
        
        setLocationRelativeTo(null);
        sendFileBtn.setEnabled(false);
        browseBtn.setEnabled(false);
        searchBtnDisabled.setVisible(false);
        browseBtnDisabled.setVisible(true);
        sendFileBtnDisabled.setVisible(true);
        
        homeUnderline.setVisible(false);
        settingsUnderline.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchBtn = new javax.swing.JButton();
        searchBtnDisabled = new javax.swing.JLabel();
        sendFileBtn = new javax.swing.JButton();
        sendFileBtnDisabled = new javax.swing.JLabel();
        browseBtn = new javax.swing.JButton();
        fileInput = new javax.swing.JTextField();
        browseBtnDisabled = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        dropDown = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        devicesTextArea = new javax.swing.JTextArea();
        homeBtn = new javax.swing.JButton();
        homeUnderline = new javax.swing.JLabel();
        settingsBtn = new javax.swing.JButton();
        settingsUnderline = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1040, 700));
        setPreferredSize(new java.awt.Dimension(1040, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        searchBtn.setBackground(new java.awt.Color(255, 255, 255));
        searchBtn.setBorder(null);
        searchBtn.setBorderPainted(false);
        searchBtn.setContentAreaFilled(false);
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchBtn);
        searchBtn.setBounds(28, 417, 214, 52);

        searchBtnDisabled.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/searchBtnDisabled.jpg"))); // NOI18N
        getContentPane().add(searchBtnDisabled);
        searchBtnDisabled.setBounds(29, 417, 212, 52);

        sendFileBtn.setBorder(null);
        sendFileBtn.setBorderPainted(false);
        sendFileBtn.setContentAreaFilled(false);
        sendFileBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sendFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFileBtnActionPerformed(evt);
            }
        });
        getContentPane().add(sendFileBtn);
        sendFileBtn.setBounds(331, 519, 621, 61);

        sendFileBtnDisabled.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/sendBtnDisabled.png"))); // NOI18N
        getContentPane().add(sendFileBtnDisabled);
        sendFileBtnDisabled.setBounds(331, 514, 630, 70);

        browseBtn.setBorder(null);
        browseBtn.setBorderPainted(false);
        browseBtn.setContentAreaFilled(false);
        browseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        browseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBtnActionPerformed(evt);
            }
        });
        getContentPane().add(browseBtn);
        browseBtn.setBounds(800, 430, 150, 50);

        fileInput.setEditable(false);
        fileInput.setBackground(new java.awt.Color(243, 240, 231));
        fileInput.setBorder(null);
        fileInput.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                fileInputCaretUpdate(evt);
            }
        });
        getContentPane().add(fileInput);
        fileInput.setBounds(340, 430, 440, 50);

        browseBtnDisabled.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/browseBtnDisabled.png"))); // NOI18N
        getContentPane().add(browseBtnDisabled);
        browseBtnDisabled.setBounds(330, 420, 630, 70);

        statusLabel.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(0, 102, 102));
        statusLabel.setText("Idle");
        getContentPane().add(statusLabel);
        statusLabel.setBounds(37, 540, 200, 30);

        dropDown.setBackground(new java.awt.Color(0, 153, 51, 0));
        usersHelper user = new usersHelper();
        dropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {user.getUsername(user.getLoggedInUser()), "Logout"}));
        dropDown.setOpaque(false);
        dropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownActionPerformed(evt);
            }
        });
        getContentPane().add(dropDown);
        dropDown.setBounds(798, 35, 186, 38);

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        devicesTextArea.setEditable(false);
        devicesTextArea.setBackground(new java.awt.Color(237, 232, 218));
        devicesTextArea.setColumns(20);
        devicesTextArea.setFont(new java.awt.Font("Lato", 0, 15)); // NOI18N
        devicesTextArea.setRows(5);
        devicesTextArea.setBorder(null);
        devicesTextArea.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                devicesTextAreaCaretPositionChanged(evt);
            }
        });
        jScrollPane3.setViewportView(devicesTextArea);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(48, 171, 190, 223);

        homeBtn.setBorder(null);
        homeBtn.setBorderPainted(false);
        homeBtn.setContentAreaFilled(false);
        homeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                homeBtnMouseExited(evt);
            }
        });
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(homeBtn);
        homeBtn.setBounds(388, 32, 110, 43);

        homeUnderline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/Underlines/homeUnderline.png"))); // NOI18N
        getContentPane().add(homeUnderline);
        homeUnderline.setBounds(442, 73, 80, 10);

        settingsBtn.setBorder(null);
        settingsBtn.setBorderPainted(false);
        settingsBtn.setContentAreaFilled(false);
        settingsBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingsBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingsBtnMouseExited(evt);
            }
        });
        settingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsBtnActionPerformed(evt);
            }
        });
        getContentPane().add(settingsBtn);
        settingsBtn.setBounds(585, 35, 140, 40);

        settingsUnderline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/Extras/Underlines/settingsUnderline.png"))); // NOI18N
        getContentPane().add(settingsUnderline);
        settingsUnderline.setBounds(640, 73, 80, 10);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgrounds/TransferFile.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1040, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        browser = new BluetoothBrowser(this);
        
        browseBtn.setEnabled(true);
        browseBtnDisabled.setVisible(false);
        
        searchBtn.setEnabled(false);
        searchBtnDisabled.setVisible(true);
        statusLabel.setText("Searching");
    }//GEN-LAST:event_searchBtnActionPerformed

    private void sendFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFileBtnActionPerformed
        // TODO add your handling code here:
        statusLabel.setText("Sending");
        sendFileBtnDisabled.setVisible(true);
        
        JOptionPane.showMessageDialog(this, "Please wait...");
        
        sendFile();
        
        statusLabel.setText("File sent");
        sendFileBtnDisabled.setVisible(false);
    }//GEN-LAST:event_sendFileBtnActionPerformed

    private void browseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser filePicker = new JFileChooser();
        filePicker.showOpenDialog(this);
        String filePath = "";
        File file = null;
        
        if(filePicker.getSelectedFile() != null){
            file = filePicker.getSelectedFile();
            filePath = file.getAbsolutePath();
        } else {
            filePath = "";
        }
        
        if(!filePath.equals("")){
            if(file.exists() && !file.isDirectory()){
                sendFileBtnDisabled.setVisible(false);
            }
        }
        
        fileInput.setText(filePath);
    }//GEN-LAST:event_browseBtnActionPerformed

    private void fileInputCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_fileInputCaretUpdate
        // TODO add your handling code here:
        if(fileInput.getText().equals("")){
            sendFileBtn.setEnabled(false);
        } else {
            sendFileBtn.setEnabled(true);
        }
    }//GEN-LAST:event_fileInputCaretUpdate

    private void devicesTextAreaCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_devicesTextAreaCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_devicesTextAreaCaretPositionChanged

    private void dropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownActionPerformed
        // TODO add your handling code here:

        if(dropDown.getSelectedItem().equals("Logout")){
            usersHelper user = new usersHelper();
            user.logout();
            this.setVisible(false);
            dispose();

            Login window = new Login();
            window.setVisible(true);
        }
    }//GEN-LAST:event_dropDownActionPerformed

    private void homeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseEntered
        // TODO add your handling code here:
        homeUnderline.setVisible(true);
    }//GEN-LAST:event_homeBtnMouseEntered

    private void homeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseExited
        // TODO add your handling code here:
        homeUnderline.setVisible(false);
    }//GEN-LAST:event_homeBtnMouseExited

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        Home window = new Home();
        window.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_homeBtnActionPerformed

    private void settingsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseClicked
        // TODO add your handling code here:
        Settings window = new Settings();
        window.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_settingsBtnMouseClicked

    private void settingsBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseEntered
        // TODO add your handling code here:
        settingsUnderline.setVisible(true);
    }//GEN-LAST:event_settingsBtnMouseEntered

    private void settingsBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsBtnMouseExited
        // TODO add your handling code here:
        settingsUnderline.setVisible(false);
    }//GEN-LAST:event_settingsBtnMouseExited

    private void settingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsBtnActionPerformed
        // TODO add your handling code here:
        Settings window = new Settings();
        window.setVisible(true);
    }//GEN-LAST:event_settingsBtnActionPerformed

    public void refreshList() {  
  
            ApplicationContext context = ApplicationContext.getInstance();  
  
            //DefaultListModel model = new DefaultListModel();  
            List<RemoteDevice> devices = context.getDevices();  
              
            if(devices != null)  
            {  
                for(RemoteDevice device : devices)  
                {  
                    System.out.println(devices.size());  
                    try  
                    {  
                          
                        String friendlyName = device.getFriendlyName(false);  
                        ListItem item = new ListItem(device, friendlyName);  
                        
                        try  
                        {  
                            //find the obexurl of the mobile device  
                            String obexURL = browser.findOBEX(device.getBluetoothAddress());  
                            if(obexURL != null)  
                            {
                                devicesTextArea.setText(devicesTextArea.getText() + "\n" + friendlyName);
                            }  
                        }  
                        catch(Exception e)  
                        {  
                            e.printStackTrace();  
                        }  
                          
                    }  
                    catch(Exception ex)  
                    {  
                        ex.printStackTrace();  
                    }  
                }  
  
            }
  
            repaint();  
            validate();
            
            statusLabel.setText("Search Complete");
    }
    
    public void sendFile(){
        ApplicationContext context = ApplicationContext.getInstance();
        List<RemoteDevice> devices = context.getDevices();

        if(devices != null)  
            {  
                for(RemoteDevice device : devices)  
                {  
                    System.out.println(devices.size());  
                    try  
                    {  
                          
                        String friendlyName = device.getFriendlyName(false);  
                        ListItem item = new ListItem(device, friendlyName);  
                        
                        try  
                        {  
                            //find the obexurl of the mobile device  
                            String obexURL = browser.findOBEX(device.getBluetoothAddress());  
                            if(obexURL != null)  
                            {
                                StartSendFileTask(device.getBluetoothAddress(), fileInput.getText(), obexURL);  
                            }  
                        }  
                        catch(Exception e)  
                        {  
                            e.printStackTrace();  
                        }  
                          
                    }  
                    catch(Exception ex)  
                    {  
                        ex.printStackTrace();  
                    }  
                }  
  
            }  
    }
    
    public boolean StartSendFileTask(String deviceAddress, String fileToSend,String obexURL)  
    {  
        try  
        {  
            FileInputStream stream = new FileInputStream(fileToSend);  
  
            File f = new File(fileToSend);  
            int size = (int)f.length();  
            byte file[] = new byte[size];  
            stream.read(file);  
            String filename = f.getName();  
            SendFileTask task = new SendFileTask(deviceAddress, file, filename, this, obexURL);  
            thread = new Thread(task);  
            thread.start();
        }  
        catch(Exception ex)  
        {              
            ex.printStackTrace();  
            return false;  
        }  
        return true;  
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransferFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransferFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransferFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransferFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransferFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton browseBtn;
    private javax.swing.JLabel browseBtnDisabled;
    private javax.swing.JTextArea devicesTextArea;
    private javax.swing.JComboBox<String> dropDown;
    private javax.swing.JTextField fileInput;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel homeUnderline;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel searchBtnDisabled;
    private javax.swing.JButton sendFileBtn;
    private javax.swing.JLabel sendFileBtnDisabled;
    private javax.swing.JButton settingsBtn;
    private javax.swing.JLabel settingsUnderline;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
